syntax="proto3";

option go_package="./proto";  // this can be alerted which we do in big org and ./proto menas where genrated code will be create

package greet_service; // we need it later so make it package

//Below part is Service definition
//case sensitive keep in mind grretservice 
//Go interfaces and client/server code for your service (GreetServiceClient, etc.)
// it will create  separate interface for server and client 
service GreetService{
    // it is from white notebook
    // example it normal req and rsp like rest api called unary api
    //say hello is a method that we need to implememt on server side
    // on client side it is a function we need to implement
    rpc SayHello(NoParam)returns(HelloResponse);

    //server streaming white notebook look
    rpc SayHelloServerStreaming(Nameslist)returns(stream HelloResponse);

    // client streaming
    rpc SayHelloClientStreaming(stream HelloRequest)returns(MessageList);

    //Bidirectional
    rpc SayHelloBidirectionalStreaming(stream HelloRequest)returns(stream HelloResponse);

}
// note : if we delete a field, we should not reuse the number
//every messae type will create the struct in generated code of Noparam
message NoParam{};

message HelloResponse{
    string message = 1;
}

message HelloRequest{
    string name = 1;
}
//every messae type will create the struct in generated code of nameslist
message Nameslist{ 
    repeated string names = 1;
}

message StreamHelloRequest{
    repeated string names = 1;
}

message MessageList{
    string name = 1;
}
